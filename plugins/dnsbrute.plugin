#!/usr/bin/python
# -*- coding: utf-8 -*-

import re
import sys
import socket
import requests
import httplib
import string
import time
import random
import sys
import os
import signal
import logging
from lxml import etree
from urlparse import urlparse
from struct import pack

plugin_description = "Author: Eitenne\nAbout: Basic dns bruteforce using wordlist"
intname = "rsf"
det = sys.argv[0]
fin = det.split('.')[-2]
__plugin__      = "%s.plugin" % (fin)
RescoursesDir = os.getcwd()
dandtime = time.strftime("%H:%M:%S")
logfile = "%s/storage/logs/%s.log" % (RescoursesDir,dandtime)

class Tee(object):
  def __init__(self):
    self.file = open(logfile, 'a')
    self.stdout = sys.stdout

  def __del__(self):
    sys.stdout = self.stdout
    self.file.close()

  def write(self, data):
    self.file.write(data)
    self.stdout.write(data)

sys.stdout = Tee()

tree = etree.parse("storage/logs/config.xml")
for user in tree.xpath("/configuration/config/default_target"):
	ip = "http://%s" % (user.text)

def signal_handler(signal, frame):
        print ''
        sys.exit(0)

def dash():
    while True:
        line_1 = "" + intname + "(\033[1;31m" + fin + "\033[1;m) > "
        terminal = raw_input(line_1).lower()
        time.sleep(0.5)
        if terminal == 'help':
            print "\n"
            print "Core Commands"
            print "============="
            print ""
            print "  Command         Description"
            print "  -------         -----------"
            print "  help            show help menu"
            print "  execute         run the plugin"
            print "  exit            exit the current plugin"
            print "  info            show plugin description"
            print ""
        elif terminal == 'execute':
            aner()
        elif terminal == "info":
            print plugin_description
            dash()
        elif terminal == 'exit':
            exit()
        else:
            print "Unknown syntax: %s" % (terminal)

def aner():
    yen = "yes"
    et = "yes"
    shellez = "132.168.2.5"
    words = "here.txt"
    print "\033[1;94m[?]\033[1;m Target :: Enter your target you want to attack"
    target = raw_input('\033[1;92m[+]\033[1;m target: [' + shellez + ']: ') or shellez

    print "\033[1;94m[?]\033[1;m Wordlist :: Enter your wordlist"
    wordlist = raw_input('\033[1;92m[+]\033[1;m wordlist: [' + words + ']: ') or words

    print "\033[1;94m[?]\033[1;m Configuring Plugin"
    time.sleep(1)
    print ""
    print "Name             Set Value"
    print "----             ----------"
    print "Target           %s" % (target)
    print "Wordlist         %s" % (wordlist)
    print "Plugin           %s" % (fin)
    print "\n"
    et = raw_input("\033[1;94m[?]\033[1;m Execute Plugins? [" + yen + "]: ")  or yen
    if et == 'yes':
       url = "http://%s/" % (target)
       arquivo = open(wordlist)
       linhas = arquivo.readlines()
       for linha in linhas:
           codigo = 404
           if linha[0] != "#":
              resposta = requests.get(url+linha)
              codigo = resposta.status_code
           if codigo != 404 and codigo != 403:
              print "\033[1;m[%s]\033[1;97m [STATUS:%s]\033[1;92m %s\033[1;m" % (time.strftime("%H:%M:%S"),codigo,url+linha)
              signal.signal(signal.SIGINT, signal_handler)
    elif et == 'no':
        print "Goodbye ;("
        sys.exit()
    else:
        print "\033[1;92m[!] No options were chosen.\033[1;m"


dash()
